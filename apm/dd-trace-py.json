{
  "url": "https://api.github.com/repos/DataDog/dd-trace-py/releases/223146841",
  "assets_url": "https://api.github.com/repos/DataDog/dd-trace-py/releases/223146841/assets",
  "upload_url": "https://uploads.github.com/repos/DataDog/dd-trace-py/releases/223146841/assets{?name,label}",
  "html_url": "https://github.com/DataDog/dd-trace-py/releases/tag/v3.9.0",
  "id": 223146841,
  "author": {
    "login": "emmettbutler",
    "id": 723615,
    "node_id": "MDQ6VXNlcjcyMzYxNQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/723615?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/emmettbutler",
    "html_url": "https://github.com/emmettbutler",
    "followers_url": "https://api.github.com/users/emmettbutler/followers",
    "following_url": "https://api.github.com/users/emmettbutler/following{/other_user}",
    "gists_url": "https://api.github.com/users/emmettbutler/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/emmettbutler/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/emmettbutler/subscriptions",
    "organizations_url": "https://api.github.com/users/emmettbutler/orgs",
    "repos_url": "https://api.github.com/users/emmettbutler/repos",
    "events_url": "https://api.github.com/users/emmettbutler/events{/privacy}",
    "received_events_url": "https://api.github.com/users/emmettbutler/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "node_id": "RE_kwDOA6uE5s4NTPNZ",
  "tag_name": "v3.9.0",
  "target_commitish": "99418b8096dc2430991bd94300cad9b9a575bb94",
  "name": "3.9.0",
  "draft": false,
  "prerelease": false,
  "created_at": "2025-06-04T13:45:34Z",
  "published_at": "2025-06-04T18:42:26Z",
  "assets": [

  ],
  "tarball_url": "https://api.github.com/repos/DataDog/dd-trace-py/tarball/v3.9.0",
  "zipball_url": "https://api.github.com/repos/DataDog/dd-trace-py/zipball/v3.9.0",
  "body": "### New Features\r\n\r\n- DSM\r\n  - Add support for context extraction for SQS -\\> Lambda messsage events.\r\n- Add support for Python 3.13 on Windows.\r\n- azure_functions\r\n  - Add distributed tracing support for http triggers.\r\n- Code Security (IAST)\r\n  - Unvalidated Redirect detection for Django, Flask and FastAPI applications, which will be displayed on your DataDog Vulnerability Explorer dashboard. See the [Application Vulnerability Management](https://docs.datadoghq.com/security/application_security/vulnerability_management/) documentation for more information about this feature.\r\n- AAP\r\n  - This introduces the capability for the waf to decide of the sampling priority of the trace in case of a security event.\r\n- litellm\r\n  - Adds APM and LLM Observability tracing support for LiteLLM's synchronous and asynchronous `completion` and `text_completion` router methods.\r\n- LLM Observability\r\n  - add processor capability to process span inputs and outputs. See usage documentation \\[here\\](<https://docs.datadoghq.com/llm_observability/setup/sdk/python/#span-processing>).\r\n  - Propagate the `ml_app` of the most recent LLM Observability span (or the global `ml_app`) when injecting distributed headers. In distributed services, uses the `ml_app` from the distributed trace headers.\r\n  - This introduces tracing for system prompts in the OpenAI Agents SDK.\r\n  - This introduces tracing for the content of tool call outputs passed to LLM spans for the OpenAI Agents integration.\r\n- dynamic instrumentation\r\n  - Add support for excluding identifiers from redaction with `DD_DYNAMIC_INSTRUMENTATION_REDACTION_EXCLUDED_IDENTIFIERS`\r\n\r\n### Upgrade Notes\r\n\r\n- AAP\r\n  - Upgrade the WAF value regex obfuscator.\r\n\r\n### Deprecation Notes\r\n\r\n- tracing\r\n  - Deprecates support for DD_TRACE_GLOBAL_TAGS in favor of `DD_TAGS`.\r\n  - Removes support for [APM Legacy App Analytics](https://docs.datadoghq.com/tracing/legacy_app_analytics/). There are still some remnants of App Analytics in the codebase, but they are not functional and output a deprecation warning.\r\n- Deprecates starting the serverless mini agent from the tracer. Use the datadog-serverless-compat package instead.\r\n\r\n### Bug Fixes\r\n\r\n- LLM Observability\r\n  - This fix resolves an issue where error type was being set to the full error message for OpenAI Agents SDK errors, resulting in long error types.\r\n- CI Visibility\r\n  - This fix resolves an issue where the DD_CIVISIBILITY_ITR_ENABLED was not honored properly.\r\n  - This fix resolves an issue where running from a GitHub action triggered on a tag push would cause the branch name to be null, causing errors when fetching Test Optimization settings from the backend.\r\n- crewai\r\n  - This fix resolves an issue where using crewai\\>=1.120.0 with ddtrace caused a `TypeError` to be thrown due to empty task contexts.\r\n- tracing\r\n  - Fixes a bug in distributed tracing where pickling `ddtrace.trace.Context` fails in coroutines. This regression was introduced in v3.7.0.\r\n  - fix issue where Trace Agent sampling rates were not being applied when using a `TraceFilter` and `tracer.configure`.\r\n  - Resolves the \"sample_before_fork was unregistered without first being registered\" warning by removing tracer at_exit hooks from the product protocol, ensuring hooks are registered and unregistered exactly once.\r\n  - Fixes an issue where truncation of span attributes longer than 25000 characters would not consistently count the size of UTF-8 multibyte characters, leading to a `unicode string is too large` error.\r\n- LLM Observability\r\n  - This fix resolves an issue where parsing token usage from langchain AI message types causes an attribute error.\r\n  - Fixes an issue where using `astream_events` on a compiled graph would raise a `KeyError`.\r\n- openai\r\n  - Resolves an issue where streamed completions and chat completions immediately returning `None` would result in unfinished spans.\r\n- dynamic instrumentation\r\n  - fixes an issue where only module scopes were being uploaded, preventing method probes from being created.\r\n- langgraph\r\n  - Fixes an issue where using `astream_events` on a compiled graph would cause missing spans.\r\n"
}
