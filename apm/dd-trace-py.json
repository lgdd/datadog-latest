{
  "url": "https://api.github.com/repos/DataDog/dd-trace-py/releases/246582703",
  "assets_url": "https://api.github.com/repos/DataDog/dd-trace-py/releases/246582703/assets",
  "upload_url": "https://uploads.github.com/repos/DataDog/dd-trace-py/releases/246582703/assets{?name,label}",
  "html_url": "https://github.com/DataDog/dd-trace-py/releases/tag/v3.14.0",
  "id": 246582703,
  "author": {
    "login": "emmettbutler",
    "id": 723615,
    "node_id": "MDQ6VXNlcjcyMzYxNQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/723615?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/emmettbutler",
    "html_url": "https://github.com/emmettbutler",
    "followers_url": "https://api.github.com/users/emmettbutler/followers",
    "following_url": "https://api.github.com/users/emmettbutler/following{/other_user}",
    "gists_url": "https://api.github.com/users/emmettbutler/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/emmettbutler/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/emmettbutler/subscriptions",
    "organizations_url": "https://api.github.com/users/emmettbutler/orgs",
    "repos_url": "https://api.github.com/users/emmettbutler/repos",
    "events_url": "https://api.github.com/users/emmettbutler/events{/privacy}",
    "received_events_url": "https://api.github.com/users/emmettbutler/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "node_id": "RE_kwDOA6uE5s4Oso2v",
  "tag_name": "v3.14.0",
  "target_commitish": "8e6116144d475ea841baaa69ed847bea9cdbb29e",
  "name": "3.14.0",
  "draft": false,
  "immutable": false,
  "prerelease": false,
  "created_at": "2025-09-10T17:35:27Z",
  "updated_at": "2025-09-11T19:27:51Z",
  "published_at": "2025-09-11T19:27:51Z",
  "assets": [

  ],
  "tarball_url": "https://api.github.com/repos/DataDog/dd-trace-py/tarball/v3.14.0",
  "zipball_url": "https://api.github.com/repos/DataDog/dd-trace-py/zipball/v3.14.0",
  "body": "Estimated end-of-life date, accurate to within three months: 08-2026\r\nSee [the support level definitions](https://docs.datadoghq.com/tracing/trace_collection/compatibility/python/#releases) for more information.\r\n\r\n### New Features\r\n \r\n- ai_guard\r\n  - add AI Guard evaluations support to LangChain instrumentation\r\n  - add evaluation support to streaming LangChain APIs\r\n- LLM Observability\r\n  - `ml_app` is now optional, defaulting to `service`. while it is still recommended to set `ml_app`, enabling LLM Observability will no longer throw if one is not provided or propagated from an upstream service.                                       \r\n  - This introduces a `tool_definitions` parameter to the `LLMObs.annotate()` method for tool calling scenarios. Users can now pass a list of tool definition dictionaries directly to annotate LLM spans with available tools. Each tool definition must include a `name` (string) field, with optional `description` (string) and `schema` (JSON-serializable dictionary) fields. \r\n  - Experiments (beta) dataset methods (`create_dataset`, `create_dataset_from_csv` and `pull_dataset`) argument `name` is changed to `dataset_name`.\r\n                                                                                                                                                                                                                                                                            \r\n### Bug Fixes                                                                                                                         \r\n                                                                   \r\n- AAP\r\n  - make sure the status code for downstream requests is properly sent to libddwaf.\r\n  - Resolves an incompatibility with gevent\\>=25.8.1 that would cause a deadlock when starting the waf via remote config.\r\n- django: Fixes issue causing `ValueError: coroutine already executing` on Python 3.13+ with `django.utils.decorators.async_only_middleware`.\r\n- asyncpg: Fix the error `\"Error: expected pool connect callback to return an instance of 'asyncpg.connection.Connection', got 'ddtrace.contrib.internal.asyncpg.patch._TracedConnection'\"` due to using the custom connect option. With this fix, postgres.connect spans will be created when this option is used.                                                                      \r\n- exception replay: fixed an issue that prevented snapshots from retrieving local variables from traceback frames from exception thrown by Celery tasks.                                                                                                                    \r\n- LLM Observability\r\n  - This fix resolves an issue where decorated functions returning responses with an ambiguous truth value (e.g. pandas dataframes) would raise an error due to the inability to coerce the value into a boolean.\r\n  - Fixes an issue where certain Google GenAI LLM requests were not being traced due to importing from google.genai.types on startup.\r\n- Fixed an issue that could have caused some products to fail to start properly in applications that use `pkg_resources`, either directly or indirectly.                                                                                                                    \r\n- profiling: Upgrades echion to pick up critical bug fixes and performance improvements.                                              \r\n- CI Visibility: This fix resolves an issue where coverage from sessions with pytest-xdist were not submitted with the proper session id, preventing Test Impact Analysis feature from working properly.                                                                    "
}
